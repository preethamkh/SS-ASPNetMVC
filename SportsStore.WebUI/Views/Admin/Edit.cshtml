@model SportsStore.Domain.Entities.Product

@{
    ViewBag.Title = "Admin: Edit " + @Model.Name;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    
    // To disable client-side validation - per view
    //HtmlHelper.ClientValidationEnabled = false;
    //HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
}

<h4>Edit @Model.Name</h4>

@*@using (Html.BeginForm())
{
    @Html.EditorForModel() // Asks MVC Framework to create the editing interface by inspecting the model type (automatically)
    <input type="submit" value="Save"/>
    @Html.ActionLink("Cancel and return to List", "Index")
}*@


@using (Html.BeginForm("Edit", "Admin"))
{
    <div class="panel-body">
        @Html.HiddenFor(m => m.ProductID)
        @foreach (var property in ViewData.ModelMetadata.Properties)
        {
            if (property.PropertyName != "ProductID")
            {
                <div class="form-group">
                    <label>@(property.DisplayName ?? property.PropertyName)</label>
                    @if (property.PropertyName == "Description")
                    {
                        @Html.TextArea(property.PropertyName, null, new {@class = "form-control", rows = 5})
                    }
                    else
                    {
                        @Html.TextBox(property.PropertyName, null, new {@class = "form-control"})
                    }
                    @Html.ValidationMessage(property.PropertyName)
                </div>
            }
        }
    </div>
    
    <div class="panel-footer">
        <input type="submit" value="Save" class="btn btn-primary"/>
        @Html.ActionLink("Cancel and return to List", "Index", null, new {@class = "btn btn-default"})
    </div>
}
